

CREATE OR ALTER PROCEDURE Silver.load_silver AS
BEGIN
	DECLARE @start_time DATETIME , @end_time DATETIME , @batch_start_time DATETIME , @batch_end_time DATETIME; --for load Duration Calculation
	BEGIN TRY
		SET @batch_start_time = GETDATE();
		PRINT '===================================================';
		PRINT 'LOADING AND CLEANING DATA FROM Bronze Layer';
		PRINT '===================================================';

		PRINT '----------------------------------------------------';
		PRINT 'LOADING AND CLEANING DATA FROM Bronze to Silver Layer';
		PRINT '----------------------------------------------------';
		
			SET @start_time = GETDATE();
			PRINT '>> TRUNCATING data from Silver.crm.cust_info '
			TRUNCATE TABLE Silver.crm_cust_info;
			PRINT '>> Inserting data into Silver.crm.cust_info'
			---CLeAN AND LOAD crm.cust_info

			INSERT INTO Silver.crm_cust_info (
				cst_id,
				cst_key,
				cst_firstname,
				cst_lastname,
				cst_material_status,
				cst_gndr,
				cst_create_date
			)
			SELECT 
				cst_id,
				cst_key,
				TRIM(cst_firstname) as cst_firstname,
				TRIM(cst_lastname) as cst_lastname,
				CASE WHEN UPPER(TRIM(cst_material_status)) = 'S' THEN 'Single'
						WHEN UPPER(TRIM(cst_material_status)) = 'M' THEN 'Married'
						ELSE 'n/a'
				END cst_marital_status,
				CASE WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
						WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
						ELSE 'n/a'
				END cst_gndr,
				cst_create_date
				FROM Bronze.crm_cust_info;

				SET @end_time = GETDATE();
				PRINT '>>Load Duration : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + ' Seconds';
				PRINT '-----------------';

			---CLeAN AND LOAD crm.prd_info
			PRINT '===================================================';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze Layer';
			PRINT '===================================================';

			PRINT '----------------------------------------------------';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze to Silver Layer';
			PRINT '----------------------------------------------------';
		
			SET @start_time = GETDATE();
			PRINT '>> TRUNCATING data from Silver.crm_prd_info  '
			TRUNCATE TABLE Silver.crm_prd_info;
			PRINT '>> Inserting data into Silver.crm_prd_info '
			INSERT INTO Silver.crm_prd_info (
					prd_id,
					cat_id,
					prd_key,
					prd_nm,
					prd_cost,
					prd_line,
					prd_start_dt,
					prd_end_dt
				)
				SELECT 
					prd_id,
					REPLACE(LEFT(prd_key,5),'-','_') as cat_id,  --but we have '-' here abut in erp table we have '_'
					SUBSTRING(prd_key,7,LEN(prd_key)) as prd_key,
					prd_nm,
					ISNULL(prd_cost,0) as prd_cost,
					CASE UPPER(TRIM(prd_line))
							WHEN 'M' THEN 'Mountain'
							WHEN 'R' THEN 'Road'
							WHEN 'S' THEN 'Other Sales'
							WHEN 'T' THEN 'Touring'
							ELSE 'n/a'
					END prd_line,
					CAST(prd_start_dt AS DATE) as prd_start_dt,
					CAST(LEAD(prd_start_dt) OVER(PARTITION BY prd_nm ORDER BY prd_start_dt) -1 AS DATE) as prd_end_dt
				FROM Bronze.crm_prd_info;
				SET @end_time = GETDATE();
				PRINT '>>Load Duration : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + ' Seconds';
				PRINT '-----------------';

			---CLeAN AND LOAD crm.sales_details
			PRINT '===================================================';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze Layer';
			PRINT '===================================================';

			PRINT '----------------------------------------------------';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze to Silver Layer';
			PRINT '----------------------------------------------------';
		
			SET @start_time = GETDATE();
			PRINT '>> TRUNCATING data from Silver.crm_sales_details  '
			TRUNCATE TABLE Silver.crm_sales_details;
			PRINT '>> Inserting data into Silver.crm_sales_details '
			INSERT INTO Silver.crm_sales_details (
					sls_ord_num,
					sls_prd_key,
					sls_cust_id,
					sls_order_dt,
					sls_ship_dt,
					sls_due_dt,
					sls_sales,
					sls_quantity,
					sls_price
			)

			SELECT sls_ord_num,
					sls_prd_key,
					sls_cust_id,
					CASE WHEN sls_order_dt = 0 OR LEN(sls_order_dt) !=8 THEN NULL
					ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
					END AS sls_order_dt,
					CASE WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) !=8 THEN NULL
					ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
					END AS sls_ship_dt,
					CASE WHEN sls_due_dt = 0 OR LEN(sls_due_dt) !=8 THEN NULL
					ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
					END AS sls_due_dt,
					CASE WHEN sls_sales is NULL OR sls_sales <=0  OR sls_sales != sls_quantity * ABS(sls_price) THEN sls_quantity * ABS(sls_price)
					ELSE sls_sales
					END sls_sales, -- Recalculate Sales if original value is missing or Incorrect
					sls_quantity,
					CASE WHEN sls_price is NULL OR sls_price <=0 THEN sls_sales / NULLIF(sls_quantity,0)
					ELSE sls_price
					END AS sls_price --Derived Price if Original value is missing
				FROM Bronze.crm_sales_details;
				SET @end_time = GETDATE();
				PRINT '>>Load Duration : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + ' Seconds';
				PRINT '-----------------';

				-------ERP--Start----------------

				--Clean and Load Silver.erp_cust_az12
			PRINT '===================================================';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze Layer';
			PRINT '===================================================';

			PRINT '----------------------------------------------------';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze to Silver Layer';
			PRINT '----------------------------------------------------';
		
			SET @start_time = GETDATE();
			PRINT '>> TRUNCATING data from Silver.erp_cust_az12  '
			TRUNCATE TABLE Silver.erp_cust_az12;
			PRINT '>> Inserting data into Silver.erp_cust_az12 '
				INSERT INTO Silver.erp_cust_az12 (
					cid,
					bdate,
					gen
				)

				SELECT
						CASE WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid,4,LEN(cid))
						ELSE cid
						END cid, --REMOVING NAS unwanated character to match the Same with Silver.crm_cust_info
						CASE WHEN bdate > GETDATE() THEN NULL
						ELSE bdate
						END bdate,
						CASE 
						WHEN UPPER(TRIM(gen)) IN ('F','FEMALE') THEN 'Female'
						WHEN UPPER(TRIM(gen)) IN ('M','MALE') THEN 'Male'
						ELSE 'n/a'
						END gen
				FROM Bronze.erp_cust_az12;
				SET @end_time = GETDATE();
				PRINT '>>Load Duration : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + ' Seconds';
				PRINT '-----------------';


				--CLeand and Load Silver.erp_loc_a101
			PRINT '===================================================';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze Layer';
			PRINT '===================================================';

			PRINT '----------------------------------------------------';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze to Silver Layer';
			PRINT '----------------------------------------------------';
		
			SET @start_time = GETDATE();
				PRINT '>> TRUNCATING data from Silver.erp_loc_a101  '
			TRUNCATE TABLE Silver.erp_loc_a101;
			PRINT '>> Inserting data into Silver.erp_loc_a101'
				INSERT INTO Silver.erp_loc_a101 (
						cid,
						cntry
				)

				SELECT 
  					REPLACE(cid,'-','') as cid,
					CASE
					WHEN UPPER(TRIM(cntry)) = 'DE' THEN 'Germany'
					WHEN UPPER(TRIM(cntry)) IN ('USA','US') THEN 'United States'
					WHEN UPPER(TRIM(cntry)) IN ('UK','UNITED KINGDOM') THEN 'United Kingdom'
					WHEN UPPER(TRIM(cntry))= '' OR UPPER(TRIM(cntry)) IS NULL THEN 'n/a'
					ELSE TRIM (cntry)
					END cntry
				FROM Bronze.erp_loc_a101;
				SET @end_time = GETDATE();
				PRINT '>>Load Duration : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + ' Seconds';
				PRINT '-----------------';

				--CLEAN AND LOAD epr_px_cat_g1v2 -Already a Cleaned Data No Ceaning or Modification requires.
			PRINT '===================================================';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze Layer';
			PRINT '===================================================';

			PRINT '----------------------------------------------------';
			PRINT 'LOADING AND CLEANING DATA FROM Bronze to Silver Layer';
			PRINT '----------------------------------------------------';
			PRINT '>> TRUNCATING data from Silver.erp_px_cat_g1v2  '
			TRUNCATE TABLE Silver.erp_px_cat_g1v2;
			PRINT '>> Inserting data into Silver.erp_px_cat_g1v2'

			INSERT INTO Silver.erp_px_cat_g1v2(id, cat,subcat,maintenance) 
			SELECT id,cat,subcat,maintenance FROM Bronze.erp_px_cat_g1v2;
			SET @end_time = GETDATE();
			PRINT '>>Load Duration : ' + CAST(DATEDIFF(second,@start_time,@end_time) AS NVARCHAR) + ' Seconds';
			PRINT '-----------------';

			SET @batch_end_time= GETDATE();
			PRINT '>> Loading and Cleaning From Bronze Layer to Silver Layer Completed';
			PRINT 'Batch Processing Time '  + CAST(DATEDIFF(SECOND,@batch_start_time,@batch_end_time) AS VARCHAR) + ' Seconds'

	END TRY


	BEGIN CATCH --TRY-CATCH METHOD TO ERROR HANDLING IF PROCEDURE/QUERY HAVE ERROR
		PRINT '==============================';
		PRINT 'ERROR OCCURED WHILE EXECUTING Silver Layer Procedure(Silver.load_silver)';
		PRINT 'Error Message' + ERROR_MESSAGE();
		PRINT 'Error Number' + CAST(ERROR_NUMBER() AS NVARCHAR);
		PRINT 'Error Number' + CAST(ERROR_STATE() AS NVARCHAR);
		PRINT '==============================';
	END CATCH;
	
END

 --EXAMPLE to TRY the Created Procedure
--EXEC Silver.load_silver;
